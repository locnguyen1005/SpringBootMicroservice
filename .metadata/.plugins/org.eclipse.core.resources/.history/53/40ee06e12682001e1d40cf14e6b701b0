package com.example.demo.Config;

import java.util.Optional;
import java.util.function.Function;

import org.reactivestreams.Publisher;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.data.domain.Sort;
import org.springframework.data.repository.query.FluentQuery.ReactiveFluentQuery;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Component;
import com.example.demo.Entity.AccountEntity;
import com.example.demo.Repository.AccountRepository;

import lombok.extern.slf4j.Slf4j;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;


@Slf4j
@Component
public class CustomUserDetailsService implements UserDetailsService{

	private AccountRepository accountRepository = new AccountRepository() {
		
		@Override
		public <S extends AccountEntity> Mono<S> findOne(Example<S> example) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public <S extends AccountEntity, R, P extends Publisher<R>> P findBy(Example<S> example,
				Function<ReactiveFluentQuery<S>, P> queryFunction) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public <S extends AccountEntity> Flux<S> findAll(Example<S> example, Sort sort) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public <S extends AccountEntity> Flux<S> findAll(Example<S> example) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public <S extends AccountEntity> Mono<Boolean> exists(Example<S> example) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public <S extends AccountEntity> Mono<Long> count(Example<S> example) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Flux<AccountEntity> findAll(Sort sort) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public <S extends AccountEntity> Flux<S> saveAll(Publisher<S> entityStream) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public <S extends AccountEntity> Flux<S> saveAll(Iterable<S> entities) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public <S extends AccountEntity> Mono<S> save(S entity) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<AccountEntity> findById(Publisher<Long> id) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<AccountEntity> findById(Long id) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Flux<AccountEntity> findAllById(Publisher<Long> idStream) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Flux<AccountEntity> findAllById(Iterable<Long> ids) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Flux<AccountEntity> findAll() {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Boolean> existsById(Publisher<Long> id) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Boolean> existsById(Long id) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Void> deleteById(Publisher<Long> id) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Void> deleteById(Long id) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Void> deleteAllById(Iterable<? extends Long> ids) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Void> deleteAll(Publisher<? extends AccountEntity> entityStream) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Void> deleteAll(Iterable<? extends AccountEntity> entities) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Void> deleteAll() {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Void> delete(AccountEntity entity) {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<Long> count() {
			// TODO Auto-generated method stub
			return null;
		}
		
		@Override
		public Mono<AccountEntity> findByEmail(String email) {
			// TODO Auto-generated method stub
			return null;
		}
	};
	
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		AccountEntity userEntity2 = null;
		try {
			userEntity2 = accountRepository.findById(1l).block();
			return new CustomUserDetails(userEntity2);
		} catch (Exception e) {
			System.out.print(e);
		}
		
		return new CustomUserDetails(userEntity2);
	}
}
