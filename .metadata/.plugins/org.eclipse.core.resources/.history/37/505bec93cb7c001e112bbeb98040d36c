package com.example.demo.event;

import java.io.InputStream;
import java.util.Collections;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.messaging.handler.annotation.Payload;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;

import com.example.demo.Controller.ProductController;
import com.example.demo.DTO.ProductDTO;
import com.example.demo.Service.ProductService;
import com.example.demo.Utils.Constant;
import com.example.demo.utils.CommonValidate;
import com.example.demo.utils.ConstantCommon;
import com.google.gson.Gson;

import lombok.extern.slf4j.Slf4j;
import reactor.core.publisher.Mono;
import reactor.kafka.receiver.KafkaReceiver;
import reactor.kafka.receiver.ReceiverOptions;
import reactor.kafka.receiver.ReceiverRecord;

@Service
@Slf4j
public class ProductComsumer {
	@Autowired
	private ProductService productService;
	@Autowired
	Gson gson;
	@KafkaListener(id  = "Partition" , topics = ConstantCommon.account)
    public ResponseEntity<Mono<ProductDTO>> accountOnboarded(@Payload String message){
		return ResponseEntity.status(HttpStatus.CREATED).body(productService.createProduct(gson.fromJson(message, ProductDTO.class)));
    }
	

}
